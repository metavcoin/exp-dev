[
  {
    "contractId": "00000000f24db32aa1881956646d3ccbb647df71455de10cf98b635810e8870906a56b63",
    "address": "cmetavcoin1qqqqqqq8jfkej4gvgr9txgmfuewmy0hm3g4w7zr8e3d34sy8gsuysdfttvvc93s77",
    "expire": 40918,
    "code": "(* NAME_START:metavcoin  Genesis Token:NAME_END *)\nopen metavcoin.Types\nopen metavcoin.Base\nopen metavcoin.Cost\nopen metavcoin.Asset\nopen metavcoin.Data\n\nmodule D = metavcoin.Dictionary\nmodule W = metavcoin.Wallet\nmodule RT = metavcoin.ResultT\nmodule Tx = metavcoin.TxSkeleton\nmodule C = metavcoin.Cost\nmodule CR = metavcoin.ContractResult\n\nlet buy txSkeleton contractId returnAddress =\n  let! contractToken = metavcoin.Asset.getDefault contractId in\n  let! amount = Tx.getAvailableTokens metavcoinAsset txSkeleton in\n\n  let! txSkeleton =\n    Tx.lockToContract metavcoinAsset amount contractId txSkeleton\n    >>= Tx.mint amount contractToken\n    >>= Tx.lockToAddress contractToken amount returnAddress in\n\n  CR.ofTxSkel txSkeleton\n\nlet redeem txSkeleton contractId returnAddress wallet =\n  let! contractToken = metavcoin.Asset.getDefault contractId in\n  let! amount = Tx.getAvailableTokens contractToken txSkeleton in\n\n  let! txSkeleton =\n    Tx.destroy amount contractToken txSkeleton\n    >>= Tx.lockToAddress metavcoinAsset amount returnAddress\n    >>= Tx.fromWallet metavcoinAsset amount contractId wallet in\n\n  CR.ofOptionTxSkel \"contract doesn't have enough metavcoins tokens\" txSkeleton\n\nlet main txSkeleton _ contractId command sender messageBody wallet state =\n  let! returnAddress =\n    messageBody >!= tryDict\n                >?= D.tryFind \"returnAddress\"\n                >?= tryLock\n  in\n  match returnAddress with\n  | Some returnAddress ->\n    if command = \"redeem\" then\n      redeem txSkeleton contractId returnAddress wallet\n    else if command = \"\" || command = \"buy\" then\n      buy txSkeleton contractId returnAddress\n      |> autoInc\n    else\n      RT.autoFailw \"unsupported command\"\n  | None ->\n    RT.autoFailw \"returnAddress is required\"\n\nlet cf _ _ _ _ _ wallet _ =\n    4 + 64 + 2 + (64 + (64 + (64 + 64 + (metavcoin.Wallet.size wallet * 128 + 192) + 3)) + 25) + 31\n    |> C.ret #nat\n"
  },
  {
    "contractId": "000000002f7ca11c62a0b30f3c57b1e37c1d4e13af5a876995dcc5c12a25bcad8058fee0",
    "address": "cmetavcoin1qqqqqqqp00js3cc4qkv8nc4a3ud7p6nsn4adgw6v4mnzuz239hjkcqk87uqvv6lt4",
    "expire": 40950,
    "code": "(* NAME_START:metavcoin  Genesis Token:NAME_END *)\nopen metavcoin.Types\nopen metavcoin.Base\nopen metavcoin.Cost\nopen metavcoin.Asset\nopen metavcoin.Data\n\nmodule D = metavcoin.Dictionary\nmodule W = metavcoin.Wallet\nmodule RT = metavcoin.ResultT\nmodule Tx = metavcoin.TxSkeleton\nmodule C = metavcoin.Cost\nmodule CR = metavcoin.ContractResult\n\nlet buy txSkeleton contractId returnAddress =\n  let! contractToken = metavcoin.Asset.getDefault contractId in\n  let! amount = Tx.getAvailableTokens metavcoinAsset txSkeleton in\n\n  let! txSkeleton =\n    Tx.lockToContract metavcoinAsset amount contractId txSkeleton\n    >>= Tx.mint amount contractToken\n    >>= Tx.lockToAddress contractToken amount returnAddress in\n\n  CR.ofTxSkel txSkeleton\n\nlet redeem txSkeleton contractId returnAddress wallet =\n  let! contractToken = metavcoin.Asset.getDefault contractId in\n  let! amount = Tx.getAvailableTokens contractToken txSkeleton in\n\n  let! txSkeleton =\n    Tx.destroy amount contractToken txSkeleton\n    >>= Tx.lockToAddress metavcoinAsset amount returnAddress\n    >>= Tx.fromWallet metavcoinAsset amount contractId wallet in\n\n  CR.ofOptionTxSkel \"contract doesn't have enough metavcoins tokens\" txSkeleton\n\nlet main txSkeleton _ contractId command sender messageBody wallet state =\n  let! returnAddress =\n    messageBody >!= tryDict\n                >?= D.tryFind \"returnAddress\"\n                >?= tryLock\n  in\n  match returnAddress with\n  | Some returnAddress ->\n    if command = \"redeem\" then\n      redeem txSkeleton contractId returnAddress wallet\n    else if command = \"\" || command = \"buy\" then\n      buy txSkeleton contractId returnAddress\n      |> autoInc\n    else\n      RT.autoFailw \"unsupported command\"\n  | None ->\n    RT.autoFailw \"returnAddress is required\"\n\nlet cf _ _ _ _ _ wallet _ =\n    4 + 64 + 2 + (64 + (64 + (64 + 64 + (metavcoin.Wallet.size wallet * 128 + 192) + 3)) + 25) + 31\n    |> C.ret #nat\n"
  }
]
